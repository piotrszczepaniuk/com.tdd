# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud-service-connection'
    organization: 'piotrszczepaniuk-1'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=piotrszczepaniuk_com.tdd
      sonar.projectName=com.tdd

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'com.tdd.tests'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: 'build/classes/main/'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    gradleOptions: '-Xmx3072m'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '2.6.1'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java'
    additionalCodeCoverageFiles: '$(System.DefaultWorkingDirectory)/target/jacoco.exec'
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'